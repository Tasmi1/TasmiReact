{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello\\\\src\\\\components\\\\Navigation.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport TodoForm from './TodoApp/TodoForm';\nimport TodoList from './TodoApp/TodoList';\nimport Axios from 'axios';\nimport Navigation from './Navigation';\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTaskNameChange = taskName => {\n      this.setState({\n        taskName: taskName\n      });\n    };\n\n    this.handleTaskDoneChange = isDone => {\n      this.setState({\n        taskDone: isDone\n      });\n    };\n\n    this.handleTaskSubmit = e => {\n      e.preventDefault();\n      if (!this.state.taskName) return;\n      Axios.post('http://localhost:3001/tasks', {\n        name: this.state.taskName,\n        done: this.state.taskDone,\n        category: this.state.categoryId\n      }, this.state.config).then(response => {\n        this.setState({\n          tasks: [...this.state.tasks, response.data],\n          taskName: ''\n        });\n      });\n    };\n\n    this.handleTaskDelete = taskId => {\n      Axios.delete(`http://localhost:3001/tasks/${taskId}`, this.state.config).then(response => {\n        const filteredTask = this.state.tasks.filter(task => {\n          return task._id !== taskId;\n        });\n        this.setState({\n          tasks: filteredTask\n        });\n      });\n    };\n\n    this.handleTaskUpdate = e => {\n      e.preventDefault();\n      Axios.put(`http://localhost:3001/tasks/${this.state.taskId}`, {\n        name: this.state.taskName,\n        done: this.state.taskDone,\n        category: this.state.categoryId\n      }, this.state.config).then(response => {\n        const updatedTasks = this.state.tasks.map(task => {\n          if (task._id === response.data._id) {\n            task = response.data;\n          }\n\n          return task;\n        });\n        this.setState({\n          tasks: updatedTasks,\n          taskName: '',\n          taskDone: false,\n          taskId: '',\n          isEdit: false\n        });\n      }).catch(err => console.log(err.response));\n    };\n\n    this.itemClick = task => {\n      this.setState({\n        isEdit: !this.state.isEdit,\n        taskId: task._id,\n        taskName: task.name,\n        taskDone: task.done\n      });\n\n      if (task.category) {\n        this.setState({\n          categoryId: task.category._id\n        });\n      } else this.setState({\n        categoryId: this.state.categories[0]._id\n      });\n\n      if (this.state.isEdit) {\n        this.setState({\n          taskId: '',\n          taskName: '',\n          taskDone: false\n        });\n      }\n    };\n\n    this.handleCategoryChange = e => {\n      this.setState({\n        categoryId: e.target.value\n      });\n    };\n\n    this.state = {\n      taskId: '',\n      taskName: '',\n      taskDone: false,\n      isEdit: false,\n      tasks: [],\n      categories: [],\n      categoryId: '',\n      config: {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:3001/tasks', this.state.config).then(response => {\n      this.setState({\n        tasks: response.data\n      });\n    }).catch(err => console.log(err.response));\n    Axios.get('http://localhost:3001/categories', this.state.config).then(response => {\n      this.setState({\n        categories: response.data,\n        categoryId: response.data[0]._id\n      });\n    }).catch(err => console.log(err.response));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      taskName: this.state.taskName,\n      taskDone: this.state.taskDone,\n      isEdit: this.state.isEdit,\n      categoryId: this.state.categoryId,\n      categories: this.state.categories,\n      handleTaskNameChange: this.handleTaskNameChange,\n      handleTaskDoneChange: this.handleTaskDoneChange,\n      handleTaskAdd: this.handleTaskSubmit,\n      handleTaskUpdate: this.handleTaskUpdate,\n      handleCategoryChange: this.handleCategoryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      tasks: this.state.tasks,\n      handleTaskDelete: this.handleTaskDelete,\n      itemClick: this.itemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/hello/src/components/Navigation.js"],"names":["React","Component","Container","TodoForm","TodoList","Axios","Navigation","Dashboard","constructor","props","handleTaskNameChange","taskName","setState","handleTaskDoneChange","isDone","taskDone","handleTaskSubmit","e","preventDefault","state","post","name","done","category","categoryId","config","then","response","tasks","data","handleTaskDelete","taskId","delete","filteredTask","filter","task","_id","handleTaskUpdate","put","updatedTasks","map","isEdit","catch","err","console","log","itemClick","categories","handleCategoryChange","target","value","headers","localStorage","getItem","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport TodoForm from './TodoApp/TodoForm';\r\nimport TodoList from './TodoApp/TodoList';\r\nimport Axios from 'axios';\r\nimport Navigation from './Navigation';\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            taskId: '',\r\n            taskName: '',\r\n            taskDone: false,\r\n            isEdit: false,\r\n            tasks: [],\r\n            categories: [],\r\n            categoryId: '',\r\n            config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:3001/tasks', this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    tasks: response.data\r\n                })\r\n            }).catch((err) => console.log(err.response))\r\n        Axios.get('http://localhost:3001/categories', this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    categories: response.data,\r\n                    categoryId: response.data[0]._id\r\n                })\r\n            }).catch((err) => console.log(err.response))\r\n    }\r\n\r\n    handleTaskNameChange = (taskName) => {\r\n        this.setState({\r\n            taskName: taskName\r\n        })\r\n    }\r\n\r\n    handleTaskDoneChange = (isDone) => {\r\n        this.setState({\r\n            taskDone: isDone\r\n        })\r\n    }\r\n\r\n    handleTaskSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.taskName) return;\r\n\r\n        Axios.post('http://localhost:3001/tasks',\r\n            {\r\n                name: this.state.taskName,\r\n                done: this.state.taskDone,\r\n                category: this.state.categoryId\r\n            },\r\n            this.state.config).then((response) => {\r\n                this.setState({\r\n                    tasks: [...this.state.tasks, response.data],\r\n                    taskName: ''\r\n                })\r\n            })\r\n    }\r\n\r\n    handleTaskDelete = (taskId) => {\r\n        Axios.delete(`http://localhost:3001/tasks/${taskId}`, this.state.config)\r\n            .then((response) => {\r\n                const filteredTask = this.state.tasks.filter((task) => {\r\n                    return task._id !== taskId\r\n                })\r\n                this.setState({\r\n                    tasks: filteredTask\r\n                })\r\n            })\r\n    }\r\n\r\n    handleTaskUpdate = (e) => {\r\n        e.preventDefault();\r\n        Axios.put(`http://localhost:3001/tasks/${this.state.taskId}`,\r\n            {\r\n                name: this.state.taskName,\r\n                done: this.state.taskDone,\r\n                category: this.state.categoryId\r\n            },\r\n            this.state.config)\r\n            .then((response) => {\r\n                const updatedTasks = this.state.tasks.map((task) => {\r\n                    if (task._id === response.data._id) {\r\n                        task = response.data\r\n                    }\r\n                    return task;\r\n                })\r\n                this.setState({\r\n                    tasks: updatedTasks,\r\n                    taskName: '',\r\n                    taskDone: false,\r\n                    taskId: '',\r\n                    isEdit: false\r\n                })\r\n            }).catch((err) => console.log(err.response));\r\n    }\r\n\r\n\r\n    itemClick = (task) => {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit,\r\n            taskId: task._id,\r\n            taskName: task.name,\r\n            taskDone: task.done\r\n        })\r\n        if (task.category) {\r\n            this.setState({\r\n                categoryId: task.category._id\r\n            })\r\n        } else this.setState({\r\n            categoryId: this.state.categories[0]._id\r\n        })\r\n\r\n        if (this.state.isEdit) {\r\n            this.setState({\r\n                taskId: '',\r\n                taskName: '',\r\n                taskDone: false,\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCategoryChange = (e) => {\r\n        this.setState({\r\n            categoryId: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navigation />\r\n                <Container className='mt-4'>\r\n                    <TodoForm taskName={this.state.taskName}\r\n                        taskDone={this.state.taskDone}\r\n                        isEdit={this.state.isEdit}\r\n                        categoryId={this.state.categoryId}\r\n                        categories={this.state.categories}\r\n                        handleTaskNameChange={this.handleTaskNameChange}\r\n                        handleTaskDoneChange={this.handleTaskDoneChange}\r\n                        handleTaskAdd={this.handleTaskSubmit}\r\n                        handleTaskUpdate={this.handleTaskUpdate}\r\n                        handleCategoryChange={this.handleCategoryChange}\r\n                    />\r\n                    <TodoList tasks={this.state.tasks}\r\n                        handleTaskDelete={this.handleTaskDelete}\r\n                        itemClick={this.itemClick}\r\n                    />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}