{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello\\\\src\\\\components\\\\dashboard.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport TodoForm from './TodoApp/TodoForm';\nimport TodoList from './TodoApp/TodoList';\nimport Axios from 'axios';\nimport Navigation from './Navigation';\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCurrentTodoChange = newTodo => {\n      this.setState({\n        currentTodo: newTodo\n      });\n    };\n\n    this.handleTodoSubmit = e => {\n      e.preventDefault();\n      if (!this.state.currentTodo) return;\n      Axios.post('http://localhost:3005/tasks', {\n        name: this.state.currentTodo\n      }, this.state.config).then(response => {\n        this.setState({\n          tasks: [...this.state.tasks, response.data],\n          currentTodo: ''\n        });\n      });\n    };\n\n    this.handleTodoDelete = taskId => {\n      const filteredTask = this.state.tasks.filter(task => {\n        return task._id !== taskId;\n      });\n      this.setState({\n        tasks: filteredTask\n      });\n      Axios.delete(`http://localhost:3005/tasks/${taskId}`, this.state.config);\n    };\n\n    this.updateTask = updatedTask => {\n      const updatedTasks = this.state.tasks.map(task => {\n        if (task._id === updatedTask._id) {\n          task = updatedTask;\n        }\n\n        return task;\n      });\n      this.setState({\n        tasks: updatedTasks\n      });\n      Axios.put(`http://localhost:3005/tasks/${updatedTask._id}`, {\n        name: updatedTask.name,\n        done: updatedTask.done\n      }, this.state.config).then(response => console.log(response.data));\n    };\n\n    this.state = {\n      tasks: [],\n      currentTodo: '',\n      config: {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:3005/tasks', this.state.config).then(response => {\n      console.log(response.data);\n      this.setState({\n        tasks: response.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      currentTodo: this.state.currentTodo,\n      handleCurrentTodoChange: this.handleCurrentTodoChange,\n      handleTodoSubmit: this.handleTodoSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      tasks: this.state.tasks,\n      handleTodoDelete: this.handleTodoDelete,\n      updateTask: this.updateTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/hello/src/components/dashboard.js"],"names":["React","Component","Container","TodoForm","TodoList","Axios","Navigation","Dashboard","constructor","props","handleCurrentTodoChange","newTodo","setState","currentTodo","handleTodoSubmit","e","preventDefault","state","post","name","config","then","response","tasks","data","handleTodoDelete","taskId","filteredTask","filter","task","_id","delete","updateTask","updatedTask","updatedTasks","map","put","done","console","log","headers","localStorage","getItem","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport TodoForm from './TodoApp/TodoForm';\r\nimport TodoList from './TodoApp/TodoList';\r\nimport Axios from 'axios';\r\nimport Navigation from './Navigation';\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            currentTodo: '',\r\n            config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:3005/tasks', this.state.config)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    tasks: response.data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleCurrentTodoChange = (newTodo) => {\r\n        this.setState({\r\n            currentTodo: newTodo\r\n        })\r\n    }\r\n\r\n    handleTodoSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.currentTodo) return;\r\n\r\n        Axios.post('http://localhost:3005/tasks', { name: this.state.currentTodo },\r\n            this.state.config).then((response) => {\r\n                this.setState({\r\n                    tasks: [...this.state.tasks, response.data],\r\n                    currentTodo: ''\r\n                })\r\n            })\r\n    }\r\n\r\n    handleTodoDelete = (taskId) => {\r\n        const filteredTask = this.state.tasks.filter((task) => {\r\n            return task._id !== taskId\r\n        })\r\n        this.setState({\r\n            tasks: filteredTask\r\n        })\r\n        Axios.delete(`http://localhost:3005/tasks/${taskId}`, this.state.config)\r\n    }\r\n\r\n    updateTask = (updatedTask) => {\r\n        const updatedTasks = this.state.tasks.map((task) => {\r\n            if (task._id === updatedTask._id) {\r\n                task = updatedTask\r\n            }\r\n            return task;\r\n        })\r\n        this.setState({\r\n            tasks: updatedTasks\r\n        })\r\n        Axios.put(`http://localhost:3005/tasks/${updatedTask._id}`,\r\n            { name: updatedTask.name, done: updatedTask.done },\r\n            this.state.config).then((response) => console.log(response.data));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navigation />\r\n                <Container className='mt-4'>\r\n                    <TodoForm currentTodo={this.state.currentTodo}\r\n                        handleCurrentTodoChange={this.handleCurrentTodoChange}\r\n                        handleTodoSubmit={this.handleTodoSubmit}\r\n                    />\r\n                    <TodoList tasks={this.state.tasks}\r\n                        handleTodoDelete={this.handleTodoDelete}\r\n                        updateTask={this.updateTask} />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}