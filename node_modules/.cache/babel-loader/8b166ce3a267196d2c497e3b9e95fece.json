{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello\\\\src\\\\components\\\\dashboard.js\";\nimport React, { Component } from 'react';\nimport { Container, Table, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup } from 'reactstrap';\nimport Axios from 'axios';\nimport Navigation from './Navigation';\nimport { Content } from 'react-mdl';\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTaskNameChange = taskName => {\n      this.setState({\n        taskName: taskName\n      });\n    };\n\n    this.handleTaskDoneChange = isDone => {\n      this.setState({\n        taskDone: isDone\n      });\n    };\n\n    this.handleTaskSubmit = e => {\n      e.preventDefault();\n      if (!this.state.taskName) return;\n      Axios.post('http://localhost:3000/tasks', {\n        name: this.state.taskName,\n        done: this.state.taskDone,\n        category: this.state.categoryId\n      }, this.state.config).then(response => {\n        this.setState({\n          tasks: [...this.state.tasks, response.data],\n          taskName: ''\n        });\n      });\n    };\n\n    this.delete = patientid => {\n      Axios.delete(`http://localhost:3000/patient/${patientid}`).then(response => {\n        const filteredpatient = this.state.patients.filter(patients => {\n          return patients._id == patientid;\n        });\n        this.setState({\n          patients: filteredpatient\n        });\n        alert('Delete Suucessfully');\n        window.location.reload(false);\n      });\n    };\n\n    this.toggle = e => {\n      this.setState({\n        isEdit: !this.state.isEdit\n      });\n    };\n\n    this.delete = doctorid => {\n      Axios.delete(`http://localhost:3000/patient/${doctorid}`).then(response => {\n        const filteredpatient = this.state.patients.filter(patients => {\n          return patients._id == patientid;\n        });\n        this.setState({\n          patients: filteredpatient\n        });\n        alert('Delete Suucessfully');\n        window.location.reload(false);\n      });\n    };\n\n    this.toggle = e => {\n      this.setState({\n        isEdit: !this.state.isEdit\n      });\n    };\n\n    this.patientEdit = patientid => {\n      console.log(patientid);\n      this.setState({\n        currentPatient: this.state.patients.find(patient => {\n          return patient._id === patientid;\n        })\n      }, console.log(this.state.currentPatient.name));\n      this.toggle();\n    };\n\n    this.handlePatientChange = e => {\n      this.setState({\n        currentPatient: _objectSpread({}, this.state.currentPatient, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.handleUpdate = patientid => {\n      console.log(patientid); // event.preventDefault();\n\n      Axios.put(`http://localhost:3000/patient/${patientid}`, this.state.currentPatient, this.state.config).then(response => {\n        console.log(response.data);\n        let updatedPatient = this.state.patients.map(patient => {\n          if (patient._id === patientid) {\n            patient = this.state.currentPatient;\n          }\n\n          return patient;\n        });\n        this.setState({\n          patients: updatedPatient\n        });\n        this.toggle(); // alert('user updated');\n      });\n    };\n\n    this.state = {\n      patients: [],\n      Doctors: [],\n      currentPatient: {},\n      fname: '',\n      address: '',\n      age: '',\n      gender: '',\n      phonenumber: '',\n      taskDone: false,\n      isEdit: false,\n      config: {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:3000/patient', this.state.config).then(response => {\n      this.setState({\n        patients: response.data\n      });\n    }).catch(err => console.log(err.response));\n    Axios.get('http://localhost:3000/Doctor', this.state.config).then(response => {\n      this.setState({\n        Doctors: response.data\n      });\n    }).catch(err => console.log(err.response));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Disease\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Prescription\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Action \"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.patients.map(patient => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, patient.fname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, patient.address), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, patient.age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, patient.phonenumber), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, patient.disease), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, patient.prescription), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        onClick: () => this.patientEdit(patient._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Edit\"), \"  \\xA0\", React.createElement(Button, {\n        class: \"btn btn-primary\",\n        onClick: () => this.delete(patient._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Delete\")));\n    }))), \"\\xA0\"), React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \" Number\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Specialist\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Action \"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, this.state.Doctors.map(doctor => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, doctor.fname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, doctor.address), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, doctor.age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, doctor.phonenumber), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, doctor.specialist), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Edit\"), \"  \\xA0\", React.createElement(Button, {\n        class: \"btn btn-primary\",\n        onClick: () => this.delete(doctor._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Delete\")));\n    })))))), React.createElement(Modal, {\n      isOpen: this.state.isEdit,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Edit Patient Data\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"fname\",\n      type: \"text\",\n      value: this.state.currentPatient.fname,\n      onChange: this.handlePatientChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"address\",\n      type: \"text\",\n      value: this.state.currentPatient.address,\n      onChange: this.handlePatientChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"age\",\n      type: \"text\",\n      value: this.state.currentPatient.age,\n      onChange: this.handlePatientChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"phonenumber\",\n      type: \"text\",\n      value: this.state.currentPatient.phonenumber,\n      onChange: this.handlePatientChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"disease\",\n      type: \"text\",\n      value: this.state.currentPatient.disease,\n      onChange: this.handlePatientChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"prescription\",\n      type: \"text\",\n      value: this.state.currentPatient.prescription,\n      onChange: this.handlePatientChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.handleUpdate(this.state.currentPatient._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Save Changes\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/hello/src/components/dashboard.js"],"names":["React","Component","Container","Table","Row","Button","Col","Modal","ModalHeader","ModalBody","ModalFooter","Input","FormGroup","Axios","Navigation","Content","Dashboard","constructor","props","handleTaskNameChange","taskName","setState","handleTaskDoneChange","isDone","taskDone","handleTaskSubmit","e","preventDefault","state","post","name","done","category","categoryId","config","then","response","tasks","data","delete","patientid","filteredpatient","patients","filter","_id","alert","window","location","reload","toggle","isEdit","doctorid","patientEdit","console","log","currentPatient","find","patient","handlePatientChange","target","value","handleUpdate","put","updatedPatient","map","Doctors","fname","address","age","gender","phonenumber","headers","localStorage","getItem","componentDidMount","get","catch","err","render","disease","prescription","doctor","specialist"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Table,Row, Button, Col,Modal,\r\n    ModalHeader, \r\n    ModalBody, \r\n    ModalFooter, \r\n    Input, \r\n    FormGroup } from 'reactstrap'\r\nimport Axios from 'axios';\r\nimport Navigation from './Navigation';\r\nimport { Content } from 'react-mdl';\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            patients:[],\r\n            Doctors:[],\r\n            currentPatient:{},\r\n            fname: '',\r\n            address: '',\r\n            age:'',\r\n            gender:'',\r\n            phonenumber:'',\r\n            taskDone: false,\r\n            isEdit: false,\r\n            config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:3000/patient', this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    patients: response.data\r\n                })\r\n            }).catch((err) => console.log(err.response))\r\n\r\n\r\n        Axios.get('http://localhost:3000/Doctor', this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    Doctors: response.data,\r\n                   \r\n                })\r\n            }).catch((err) => console.log(err.response))\r\n    }\r\n\r\n    handleTaskNameChange = (taskName) => {\r\n        this.setState({\r\n            taskName: taskName\r\n        })\r\n    }\r\n\r\n    handleTaskDoneChange = (isDone) => {\r\n        this.setState({\r\n            taskDone: isDone\r\n        })\r\n    }\r\n\r\n    handleTaskSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.taskName) return;\r\n\r\n        Axios.post('http://localhost:3000/tasks',\r\n            {\r\n                name: this.state.taskName,\r\n                done: this.state.taskDone,\r\n                category: this.state.categoryId\r\n            },\r\n            this.state.config).then((response) => {\r\n                this.setState({\r\n                    tasks: [...this.state.tasks, response.data],\r\n                    taskName: ''\r\n                })\r\n            })\r\n    }\r\n\r\n    delete = (patientid) => {\r\n        Axios.delete(`http://localhost:3000/patient/${patientid}`)\r\n            .then((response) => {\r\n                const filteredpatient = this.state.patients.filter((patients) => {\r\n                    return patients._id == patientid\r\n                })\r\n                this.setState({\r\n                    patients: filteredpatient\r\n                })\r\n                alert('Delete Suucessfully')\r\n                window.location.reload(false);\r\n            })\r\n    }\r\n    toggle = (e) => {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit\r\n        })\r\n    }\r\n\r\n\r\n    delete = (doctorid) => {\r\n        Axios.delete(`http://localhost:3000/patient/${doctorid}`)\r\n            .then((response) => {\r\n                const filteredpatient = this.state.patients.filter((patients) => {\r\n                    return patients._id == patientid\r\n                })\r\n                this.setState({\r\n                    patients: filteredpatient\r\n                })\r\n                alert('Delete Suucessfully')\r\n                window.location.reload(false);\r\n            })\r\n    }\r\n    toggle = (e) => {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit\r\n        })\r\n    }\r\n\r\n\r\n    // handleTaskDelete = (Doctor) => {\r\n    //     Axios.delete(`http://localhost:3000/Doctor/${patient}`, this.state.config)\r\n    //         .then((response) => {\r\n    //             const filteredpatient = this.state.patients.filter((patient) => {\r\n    //                 return patient._id !== patient\r\n    //             })\r\n    //             this.setState({\r\n    //                 patient: filteredpatient\r\n    //             })\r\n    //             alert('Delete Suucessfully')\r\n    //             window.location.reload(false);\r\n    //         })\r\n    // }\r\n\r\n    //events edit by their unique id\r\n    patientEdit = (patientid) => {\r\n        console.log(patientid)\r\n\r\n        this.setState({\r\n            currentPatient: this.state.patients.find((patient) => {\r\n                return patient._id === patientid\r\n            })\r\n        }, console.log(this.state.currentPatient.name));\r\n         this.toggle();\r\n    }\r\n\r\n    handlePatientChange = (e) => {\r\n        this.setState({\r\n            currentPatient: { ...this.state.currentPatient, [e.target.name]: e.target.value }\r\n        });\r\n    };\r\n\r\n    \r\n///update events data by admin\r\nhandleUpdate=(patientid)=>{\r\n    console.log(patientid);\r\n    // event.preventDefault();\r\n    Axios.put(`http://localhost:3000/patient/${patientid}`,this.state.currentPatient,this.state.config)\r\n    .then((response)=>{\r\n        console.log(response.data)\r\n        let updatedPatient = this.state.patients.map((patient)=> {\r\n            if(patient._id === patientid) {\r\n                patient = this.state.currentPatient\r\n            }\r\n            return patient\r\n        })\r\n        \r\n        this.setState({\r\n            patients: updatedPatient\r\n        })\r\n        this.toggle();\r\n\r\n        // alert('user updated');\r\n    })\r\n}\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Navigation />\r\n                <Content>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n\r\n                        <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Address</th>\r\n          <th>Age</th>\r\n          <th>Phone Number</th>\r\n          <th>Disease</th> \r\n          <th>Prescription</th>\r\n          <th>Action </th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n          {\r\n        this.state.patients.map((patient)=>{\r\n           return <tr>\r\n          <td>{patient.fname}</td>\r\n                        <td>{patient.address}</td>\r\n                        <td>{patient.age}</td>\r\n                        <td>{patient.phonenumber}</td> \r\n                        <td>{patient.disease}</td>\r\n                        <td>{patient.prescription}</td>\r\n                        <td> <Button onClick={()=>this.patientEdit(patient._id)}>Edit</Button>  &nbsp;\r\n                        <Button class=\"btn btn-primary\" onClick={()=> this.delete(patient._id)}>Delete</Button></td>\r\n        </tr>\r\n        \r\n        })\r\n    }\r\n      </tbody>\r\n\r\n    </Table>\r\n&nbsp;\r\n\r\n                        </Col>\r\n\r\n\r\n                        <Col md=\"6\" >\r\n\r\n<Table>\r\n<thead >\r\n<tr> \r\n<th>Name</th>\r\n<th>Address</th>\r\n<th>Age</th>\r\n<th> Number</th>\r\n<th>Specialist</th> \r\n<th>Action </th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n{\r\nthis.state.Doctors.map((doctor)=>{\r\nreturn <tr>\r\n<td>{doctor.fname}</td>\r\n<td>{doctor.address}</td>\r\n<td>{doctor.age}</td>\r\n<td>{doctor.phonenumber}</td> \r\n<td>{doctor.specialist}</td>\r\n\r\n<td> <Button >Edit</Button>  &nbsp;\r\n<Button class=\"btn btn-primary\" onClick={()=> this.delete(doctor._id)}>Delete</Button></td>\r\n</tr>\r\n\r\n})\r\n}\r\n</tbody>\r\n\r\n</Table>\r\n\r\n\r\n</Col>\r\n\r\n                    </Row>\r\n                \r\n                </Content>\r\n                <Modal isOpen={this.state.isEdit} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>\r\n                        Edit Patient Data\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <Input name='fname' type='text'\r\n                                value={this.state.currentPatient.fname} \r\n                                onChange={this.handlePatientChange} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input name='address' type='text'\r\n                                value={this.state.currentPatient.address} \r\n                                onChange={this.handlePatientChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input name='age' type='text'\r\n                                value={this.state.currentPatient.age} \r\n                                onChange={this.handlePatientChange}/>\r\n                        </FormGroup>   \r\n                        <FormGroup>\r\n                            <Input name='phonenumber' type='text'\r\n                                value={this.state.currentPatient.phonenumber} \r\n                                onChange={this.handlePatientChange}/>\r\n                        </FormGroup>        \r\n                        <FormGroup>\r\n                            <Input name='disease' type='text'\r\n                                value={this.state.currentPatient.disease} \r\n                                onChange={this.handlePatientChange}/>\r\n                        </FormGroup>   \r\n                        <FormGroup>\r\n                            <Input name='prescription' type='text'\r\n                                value={this.state.currentPatient.prescription} \r\n                                onChange={this.handlePatientChange}/>\r\n                        </FormGroup>                                 \r\n                    </ModalBody>  \r\n                    <ModalFooter>\r\n                        <Button color='primary' onClick={()=>this.handleUpdate(this.state.currentPatient._id)}>\r\n                            Save Changes</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n            </React.Fragment>\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}