{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello\\\\src\\\\components\\\\dashboard.js\";\nimport React, { Component } from 'react';\nimport { Container, Table, Row, Button, Col } from 'reactstrap';\nimport Axios from 'axios';\nimport Navigation from './Navigation';\nimport { Content } from 'react-mdl';\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTaskNameChange = taskName => {\n      this.setState({\n        taskName: taskName\n      });\n    };\n\n    this.handleTaskDoneChange = isDone => {\n      this.setState({\n        taskDone: isDone\n      });\n    };\n\n    this.handleTaskSubmit = e => {\n      e.preventDefault();\n      if (!this.state.taskName) return;\n      Axios.post('http://localhost:3000/tasks', {\n        name: this.state.taskName,\n        done: this.state.taskDone,\n        category: this.state.categoryId\n      }, this.state.config).then(response => {\n        this.setState({\n          tasks: [...this.state.tasks, response.data],\n          taskName: ''\n        });\n      });\n    };\n\n    this.delete = patientid => {\n      Axios.delete(`http://localhost:3000/patient/${patientid}`).then(response => {\n        const filteredpatient = this.state.patients.filter(patients => {\n          return patients._id == patientid;\n        });\n        this.setState({\n          patients: filteredpatient\n        });\n        alert('Delete Suucessfully');\n        window.location.reload(false);\n      });\n    };\n\n    this.handleTaskUpdate = e => {\n      e.preventDefault();\n      Axios.put(`http://localhost:3000/tasks/${this.state.taskId}`, {\n        name: this.state.taskName,\n        done: this.state.taskDone,\n        category: this.state.categoryId\n      }, this.state.config).then(response => {\n        const updatedTasks = this.state.tasks.map(task => {\n          if (task._id === response.data._id) {\n            task = response.data;\n          }\n\n          return task;\n        });\n        this.setState({\n          tasks: updatedTasks,\n          taskName: '',\n          taskDone: false,\n          taskId: '',\n          isEdit: false\n        });\n      }).catch(err => console.log(err.response));\n    };\n\n    this.itemClick = task => {\n      this.setState({\n        isEdit: !this.state.isEdit,\n        taskId: task._id,\n        taskName: task.name,\n        taskDone: task.done\n      });\n\n      if (task.category) {\n        this.setState({\n          categoryId: task.category._id\n        });\n      } else this.setState({\n        categoryId: this.state.categories[0]._id\n      });\n\n      if (this.state.isEdit) {\n        this.setState({\n          taskId: '',\n          taskName: '',\n          taskDone: false\n        });\n      }\n    };\n\n    this.handleCategoryChange = e => {\n      this.setState({\n        categoryId: e.target.value\n      });\n    };\n\n    this.state = {\n      patients: [],\n      Doctors: [],\n      fname: '',\n      address: '',\n      age: '',\n      gender: '',\n      phonenumber: '',\n      taskDone: false,\n      isEdit: false,\n      config: {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:3000/patient', this.state.config).then(response => {\n      this.setState({\n        patients: response.data\n      });\n    }).catch(err => console.log(err.response));\n    Axios.get('http://localhost:3000/Doctor', this.state.config).then(response => {\n      this.setState({\n        Doctors: response.data\n      });\n    }).catch(err => console.log(err.response));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Disease\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Prescription\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Action \"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.state.patients.map(patient => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, patient.fname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, patient.address), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, patient.age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, patient.phonenumber), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, patient.disease), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, patient.prescription), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Edit\"), \"  \\xA0\", React.createElement(Button, {\n        class: \"btn btn-primary\",\n        onClick: () => this.delete(patient._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Delete\")));\n    }))), \"\\xA0\"), React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \" Number\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Specialist\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Action \"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.state.Doctors.map(doctor => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, doctor.fname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, doctor.address), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, doctor.age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, doctor.phonenumber), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, doctor.specialist), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Edit\"), \"  \\xA0\", React.createElement(Button, {\n        class: \"btn btn-primary\",\n        onClick: () => this.delete(doctor._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Delete\")));\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/hello/src/components/dashboard.js"],"names":["React","Component","Container","Table","Row","Button","Col","Axios","Navigation","Content","Dashboard","constructor","props","handleTaskNameChange","taskName","setState","handleTaskDoneChange","isDone","taskDone","handleTaskSubmit","e","preventDefault","state","post","name","done","category","categoryId","config","then","response","tasks","data","delete","patientid","filteredpatient","patients","filter","_id","alert","window","location","reload","handleTaskUpdate","put","taskId","updatedTasks","map","task","isEdit","catch","err","console","log","itemClick","categories","handleCategoryChange","target","value","Doctors","fname","address","age","gender","phonenumber","headers","localStorage","getItem","componentDidMount","get","render","patient","disease","prescription","doctor","specialist"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Table,Row, Button, Col } from 'reactstrap'\r\nimport Axios from 'axios';\r\nimport Navigation from './Navigation';\r\nimport { Content } from 'react-mdl';\r\n\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            patients:[],\r\n            Doctors:[],\r\n\r\n            fname: '',\r\n            address: '',\r\n            age:'',\r\n            gender:'',\r\n            phonenumber:'',\r\n            taskDone: false,\r\n            isEdit: false,\r\n            config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:3000/patient', this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    patients: response.data\r\n                })\r\n            }).catch((err) => console.log(err.response))\r\n\r\n\r\n        Axios.get('http://localhost:3000/Doctor', this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    Doctors: response.data,\r\n                   \r\n                })\r\n            }).catch((err) => console.log(err.response))\r\n    }\r\n\r\n    handleTaskNameChange = (taskName) => {\r\n        this.setState({\r\n            taskName: taskName\r\n        })\r\n    }\r\n\r\n    handleTaskDoneChange = (isDone) => {\r\n        this.setState({\r\n            taskDone: isDone\r\n        })\r\n    }\r\n\r\n    handleTaskSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.taskName) return;\r\n\r\n        Axios.post('http://localhost:3000/tasks',\r\n            {\r\n                name: this.state.taskName,\r\n                done: this.state.taskDone,\r\n                category: this.state.categoryId\r\n            },\r\n            this.state.config).then((response) => {\r\n                this.setState({\r\n                    tasks: [...this.state.tasks, response.data],\r\n                    taskName: ''\r\n                })\r\n            })\r\n    }\r\n\r\n    delete = (patientid) => {\r\n        Axios.delete(`http://localhost:3000/patient/${patientid}`)\r\n            .then((response) => {\r\n                const filteredpatient = this.state.patients.filter((patients) => {\r\n                    return patients._id == patientid\r\n                })\r\n                this.setState({\r\n                    patients: filteredpatient\r\n                })\r\n                alert('Delete Suucessfully')\r\n                window.location.reload(false);\r\n            })\r\n    }\r\n\r\n\r\n    // handleTaskDelete = (Doctor) => {\r\n    //     Axios.delete(`http://localhost:3000/Doctor/${patient}`, this.state.config)\r\n    //         .then((response) => {\r\n    //             const filteredpatient = this.state.patients.filter((patient) => {\r\n    //                 return patient._id !== patient\r\n    //             })\r\n    //             this.setState({\r\n    //                 patient: filteredpatient\r\n    //             })\r\n    //             alert('Delete Suucessfully')\r\n    //             window.location.reload(false);\r\n    //         })\r\n    // }\r\n\r\n\r\n\r\n    handleTaskUpdate = (e) => {\r\n        e.preventDefault();\r\n        Axios.put(`http://localhost:3000/tasks/${this.state.taskId}`,\r\n            {\r\n                name: this.state.taskName,\r\n                done: this.state.taskDone,\r\n                category: this.state.categoryId\r\n            },\r\n            this.state.config)\r\n            .then((response) => {\r\n                const updatedTasks = this.state.tasks.map((task) => {\r\n                    if (task._id === response.data._id) {\r\n                        task = response.data\r\n                    }\r\n                    return task;\r\n                })\r\n                this.setState({\r\n                    tasks: updatedTasks,\r\n                    taskName: '',\r\n                    taskDone: false,\r\n                    taskId: '',\r\n                    isEdit: false\r\n                })\r\n            }).catch((err) => console.log(err.response));\r\n    }\r\n\r\n\r\n    itemClick = (task) => {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit,\r\n            taskId: task._id,\r\n            taskName: task.name,\r\n            taskDone: task.done\r\n        })\r\n        if (task.category) {\r\n            this.setState({\r\n                categoryId: task.category._id\r\n            })\r\n        } else this.setState({\r\n            categoryId: this.state.categories[0]._id\r\n        })\r\n\r\n        if (this.state.isEdit) {\r\n            this.setState({\r\n                taskId: '',\r\n                taskName: '',\r\n                taskDone: false,\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCategoryChange = (e) => {\r\n        this.setState({\r\n            categoryId: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Navigation />\r\n                <Content>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n\r\n                        <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Address</th>\r\n          <th>Age</th>\r\n          <th>Phone Number</th>\r\n          <th>Disease</th> \r\n          <th>Prescription</th>\r\n          <th>Action </th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n          {\r\n        this.state.patients.map((patient)=>{\r\n           return <tr>\r\n          <td>{patient.fname}</td>\r\n                        <td>{patient.address}</td>\r\n                        <td>{patient.age}</td>\r\n                        <td>{patient.phonenumber}</td> \r\n                        <td>{patient.disease}</td>\r\n                        <td>{patient.prescription}</td>\r\n                        <td> <Button>Edit</Button>  &nbsp;\r\n                        <Button class=\"btn btn-primary\" onClick={()=> this.delete(patient._id)}>Delete</Button></td>\r\n        </tr>\r\n        \r\n        })\r\n    }\r\n      </tbody>\r\n\r\n    </Table>\r\n&nbsp;\r\n\r\n                        </Col>\r\n\r\n\r\n                        <Col md=\"6\" >\r\n\r\n<Table>\r\n<thead >\r\n<tr> \r\n<th>Name</th>\r\n<th>Address</th>\r\n<th>Age</th>\r\n<th> Number</th>\r\n<th>Specialist</th> \r\n<th>Action </th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n{\r\nthis.state.Doctors.map((doctor)=>{\r\nreturn <tr>\r\n<td>{doctor.fname}</td>\r\n<td>{doctor.address}</td>\r\n<td>{doctor.age}</td>\r\n<td>{doctor.phonenumber}</td> \r\n<td>{doctor.specialist}</td>\r\n\r\n<td> <Button >Edit</Button>  &nbsp;\r\n<Button class=\"btn btn-primary\" onClick={()=> this.delete(doctor._id)}>Delete</Button></td>\r\n</tr>\r\n\r\n})\r\n}\r\n</tbody>\r\n\r\n</Table>\r\n\r\n\r\n</Col>\r\n\r\n                    </Row>\r\n                \r\n                </Content>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}